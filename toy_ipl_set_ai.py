# -*- coding: utf-8 -*-
"""toy ipl set ai

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1taclxibTi73hyp8PAx5x2z9SIdzbzBp3
"""

import pandas as pd

# toy dataset (you can expand later with real IPL data)
data = [
    ["Player A", 45, 140, 90, 95],
    ["Player B", 60, 150, 110, 120],
    ["Player C", 30, 120, 60, 65],
    ["Player D", 70, 160, 130, 150],
    ["Player E", 25, 100, 40, 50],
]

df = pd.DataFrame(data, columns=["player","balls","sr","past_highest","target"])

# features (X) and target (y)
X = df[["balls","sr","past_highest"]]
y = df["target"]

df

from sklearn.tree import DecisionTreeRegressor

# train simple tree
model = DecisionTreeRegressor(max_depth=3, random_state=42)
model.fit(X, y)

print("Model trained successfully!")

# new scenario: a player faces 50 balls, strike rate 135, past highest 100
X_new = pd.DataFrame([[50, 135, 100]], columns=["balls", "sr", "past_highest"])
prediction = model.predict(X_new)

print(f"Predicted possible highest score: {prediction[0]:.1f}")

from sklearn import tree
import matplotlib.pyplot as plt

plt.figure(figsize=(12,8))
tree.plot_tree(model, feature_names=["balls","sr","past_highest"], filled=True, rounded=True)
plt.show()

# predict for all players in dataset
df["predicted_score"] = model.predict(X)

# print name + predicted score
for i, row in df.iterrows():
    print(f"{row['player']} â†’ Predicted Highest Score: {row['predicted_score']:.1f}")
